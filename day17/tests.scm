(define-module (adventofcode2021 day17 tests)
    #:use-module (adventofcode2021 day17 utils)
    #:use-module (adventofcode2021 day17 trickshot)
    #:use-module (ice-9 rdelim)
    #:use-module (srfi srfi-1)
    #:use-module (srfi srfi-2) ; and-let*
    #:use-module (srfi srfi-19)
    #:use-module (srfi srfi-41)
    #:use-module (srfi srfi-43)
    #:use-module (srfi srfi-64))

(define (dbg t v) (format #t "~s: ~a\n" t v) (force-output))

(define-syntax-rule (import-private module)
    (define module (@@ (adventofcode2021 day17 trickshot) module)))

(define (guess-current-dirname)
  (and-let* ((source-location (current-source-location))
             (filename (assq-ref source-location 'filename))
             (absolute-filepath (%search-load-path filename))
             (absolute-dirname (dirname absolute-filepath)))
         absolute-dirname))

(define testdir (or (guess-current-dirname) (getcwd)))

(define example-string
 "target area: x=20..30, y=-10..-5")

;; import internal functions of module to test
(import-private string->target)
(import-private make-target)

(test-begin "parsing")
(test-equal (make-target 20 30 -10 -5)
   (string->target example-string))
(test-end "parsing")

;; import internal functions of module to test
(import-private search-y-max)

(test-begin "find-vy-init-max")
(test-equal 45 (search-y-max (make-target 20 30 -10 -5)))
(search-y-max (make-target 20 30 -10 -5))
(test-end "find-vy-init-max")

;; import internal functions of module to test
(import-private x-at)

(test-begin "x-at")
(test-equal 0 (x-at 10 0))
(test-equal 10 (x-at 10 1))
(test-equal 19 (x-at 10 2))
(test-end "x-at")


;; import internal functions of module to test
(import-private make-velocities)
(import-private velocities<?)
(import-private search-all-v-inits)

(test-begin "find-all-v-inits")
(define velocities
  (sort
    (list
     (make-velocities 23 -10)
     (make-velocities 25  -9)
     (make-velocities 27  -5)
     (make-velocities 29  -6)
     (make-velocities 22  -6)
     (make-velocities 21  -7)
     (make-velocities  9   0)
     (make-velocities 27  -7)
     (make-velocities 24  -5)
     (make-velocities 25  -7)
     (make-velocities 26  -6)
     (make-velocities 25  -5)
     (make-velocities  6   8)
     (make-velocities 11  -2)
     (make-velocities 20  -5)
     (make-velocities 29 -10)
     (make-velocities  6   3)
     (make-velocities 28  -7)
     (make-velocities  8   0)
     (make-velocities 30  -6)
     (make-velocities 29  -8)
     (make-velocities 20 -10)
     (make-velocities  6   7)
     (make-velocities  6   4)
     (make-velocities  6   1)
     (make-velocities 14  -4)
     (make-velocities 21  -6)
     (make-velocities 26 -10)
     (make-velocities  7  -1)
     (make-velocities  7   7)
     (make-velocities  8  -1)
     (make-velocities 21  -9)
     (make-velocities  6   2)
     (make-velocities 20  -7)
     (make-velocities 30 -10)
     (make-velocities 14  -3)
     (make-velocities 20  -8)
     (make-velocities 13  -2)
     (make-velocities  7   3)
     (make-velocities 28  -8)
     (make-velocities 29  -9)
     (make-velocities 15  -3)
     (make-velocities 22  -5)
     (make-velocities 26  -8)
     (make-velocities 25  -8)
     (make-velocities 25  -6)
     (make-velocities 15  -4)
     (make-velocities  9  -2)
     (make-velocities 15  -2)
     (make-velocities 12  -2)
     (make-velocities 28  -9)
     (make-velocities 12  -3)
     (make-velocities 24  -6)
     (make-velocities 23  -7)
     (make-velocities 25 -10)
     (make-velocities  7   8)
     (make-velocities 11  -3)
     (make-velocities 26  -7)
     (make-velocities  7   1)
     (make-velocities 23  -9)
     (make-velocities  6   0)
     (make-velocities 22 -10)
     (make-velocities 27  -6)
     (make-velocities  8   1)
     (make-velocities 22  -8)
     (make-velocities 13  -4)
     (make-velocities  7   6)
     (make-velocities 28  -6)
     (make-velocities 11  -4)
     (make-velocities 12  -4)
     (make-velocities 26  -9)
     (make-velocities  7   4)
     (make-velocities 24 -10)
     (make-velocities 23  -8)
     (make-velocities 30  -8)
     (make-velocities  7   0)
     (make-velocities  9  -1)
     (make-velocities 10  -1)
     (make-velocities 26  -5)
     (make-velocities 22  -9)
     (make-velocities  6   5)
     (make-velocities  7   5)
     (make-velocities 23  -6)
     (make-velocities 28 -10)
     (make-velocities 10  -2)
     (make-velocities 11  -1)
     (make-velocities 20  -9)
     (make-velocities 14  -2)
     (make-velocities 29  -7)
     (make-velocities 13  -3)
     (make-velocities 23  -5)
     (make-velocities 24  -8)
     (make-velocities 27  -9)
     (make-velocities 30  -7)
     (make-velocities 28  -5)
     (make-velocities 21 -10)
     (make-velocities  7   9)
     (make-velocities  6   6)
     (make-velocities 21  -5)
     (make-velocities 27 -10)
     (make-velocities  7   2)
     (make-velocities 30  -9)
     (make-velocities 21  -8)
     (make-velocities 22  -7)
     (make-velocities 24  -9)
     (make-velocities 20  -6)
     (make-velocities  6   9)
     (make-velocities 29  -5)
     (make-velocities  8  -2)
     (make-velocities 27  -8)
     (make-velocities 30  -5)
     (make-velocities 24  -7))
   velocities<?))
(test-equal velocities (sort (search-all-v-inits (make-target 20 30 -10 -5)) velocities<?))
(sort (search-all-v-inits (make-target 20 30 -10 -5)) velocities<?)
(test-end "find-all-v-inits")
